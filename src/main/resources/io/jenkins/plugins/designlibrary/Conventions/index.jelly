<!--
The MIT License

Copyright 2022 Jan Faracik

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:s="/lib/samples">
  <s:sample>
    <h2 class="jdl-heading">Stylesheets (CSS/SCSS)</h2>

    <h3 class="jdl-heading">Naming</h3>

    <p class="jdl-paragraph">Class names should follow <a class="jdl-link" href="http://getbem.com">Block Element Modifier (BEM) methodology</a> and be prefixed.</p>

    <div class="jdl-bem-table">
      <div>
        <dt class="jdl-!-bem-block-color">Block</dt>
        <dd>Standalone entity that is meaningful on its own</dd>
        <dd>e.g. <code>header</code>, <code>container</code>, <code>menu</code>, <code>checkbox</code>, <code>input</code></dd>
      </div>
      <div>
        <dt class="jdl-!-bem-element-color">Element</dt>
        <dd>A part of a block that has no standalone meaning and is semantically tied to its block</dd>
        <dd>e.g. <code>__item</code>, <code>__checkbox-caption</code>, <code>__header</code></dd>
      </div>
      <div>
        <dt class="jdl-!-bem-modifier-color">Modifier</dt>
        <dd>A flag on a block or element. Use them to change appearance or behavior</dd>
        <dd>e.g. <code>--disabled</code>, <code>--selected</code>, <code>--large</code></dd>
      </div>
    </div>

    <p class="jdl-paragraph">An example classname following this strategy could be <code>.jenkins-<span class="jdl-!-bem-block-color">cards</span><span class="jdl-!-bem-element-color">__item</span><span class="jdl-!-bem-modifier-color">--large</span></code> or <code>.jenkins-<span class="jdl-!-bem-block-color">button</span><span class="jdl-!-bem-modifier-color">--disabled</span></code>.</p>

    <p class="jdl-paragraph">
      Not every class falls neatly into BEM, for example a class that does not belong to a particular component - such as a spacing or color class. For those classes we use the <code>-!-</code> convention created by GOV.UK to indicate that the classes can be used on any component.

      A few examples: <code>.jenkins-!-padding-6</code>, <code>.jenkins-!-margin-6</code> and <code>.jenkins-!-destructive-color</code>.
    </p>

    <h3 class="jdl-heading">Prefixes</h3>

    <p class="jdl-paragraph">
      Classes should be prefixed in a way that is unique to your service or plugin. We use prefixes due to the extensible nature of Jenkins, without prefixing we couldn't be certain a plugin class wouldn't interfere with a Jenkins class. We also use prefixing due to older libraries, such as Bootstrap, still being in use in Jenkins.
      <br/><br />
      Jenkins will exclusively use the prefixes <code>jenkins-</code> and <code>app-</code> to namespace CSS classes, these prefixes should not be used in your plugins. A simple way to come up with a prefix for your classes is to use an acronym of your plugin name, e.g. Jenkins Design Library becomes <code>jdl</code>.
      <br /><br />
      Classes prefixed with <code>jenkins-</code> indicate that they can be used in your plugin with confidence that they will only receive minimal changes, or they'll be indicated to have a major change in a new version of Jenkins.
      <br /><br />
      Classes prefixed with <code>app-</code> indicate that they should not be used in your plugin as these classes are internal to Jenkins and may change at any time.
    </p>
  </s:sample>
</j:jelly>
