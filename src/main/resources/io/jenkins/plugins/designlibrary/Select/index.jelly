<!--
The MIT License

Copyright (c) 2004-2010, Oracle Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:s="/lib/samples">
  <s:sample>
    <p class="jenkins-description">There are a couple of ways to create a dropdown in Jenkins.</p>

    <p class="jenkins-description">You can use <code>dropdownDescriptorSelector</code> to create a fully data-bound form and the option to include a
      config page for the <code>descriptor</code> by creating a file called <code>config.jelly</code>.
    </p>
    <form action="submit" method="post">

      <pre>
        <!-- we use remote here as otherwise the it.descriptors will be interpreted in the output -->
        <code class="sample-remote language-xml" data-sample="sample.jelly" />
      </pre>
      <f:dropdownDescriptorSelector field="fruit" title="Fruits" descriptors="${it.fruitDescriptors}" />

      <f:submit value="Save"/>
    </form>
    <p style="margin-top: var(--section-padding);" class="jenkins-description">If you want a simpler <code>select</code> to be rendered you can use the <code>f:select</code>
    jelly tag and create a <code>doFillFieldNameItems</code> method in the <code>descriptor</code>.</p>

    <f:entry title="Fruits">
      <f:select field="fruit"/>
    </f:entry>

    config.jelly:
    <pre><code class="sample-remote language-xml" data-sample="sample2.jelly" /></pre>

    Java source code:
    <pre><code class="sample-remote language-java" data-sample="Sample.java" /></pre>

    <h2>Dynamic select</h2>

    <p class="jenkins-description">
      Updates the contents of a 'select' control dynamically based on selections of other controls.
    </p>

    <form method="post">
      <f:entry title="Country" field="country">
        <f:textbox/>
      </f:entry>
      <f:entry title="State" field="state">
        <f:select/>
      </f:entry>
      <f:entry title="City" field="city">
        <f:select/>
      </f:entry>
    </form>

    <code>config.jelly:</code>
    <pre>
      <code class="sample-remote language-xml" data-sample="dynamic-sample.jelly" />
    </pre>
    <code>Sample.java:</code>

    <pre>
      <code class="sample-remote language-java" data-sample="DynamicSample.java" />
    </pre>

  </s:sample>
</j:jelly>
