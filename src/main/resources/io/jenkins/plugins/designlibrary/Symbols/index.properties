leadParagraph=Symbols are intended to be used everywhere a traditional icon would be used, such as in the sidebar, in buttons and in tables. \
Symbols are scalable, support different weights and adapt to the user''s theme.
do=Do
dont=Don''t
do.1=Symbols should be used to help a user recognise what a task does at a glance
do.2=They should be recognisable and relevant, e.g.\u0020
do.2Continued=\u0020for locked resources
do.3=Use a tooltip on the symbol if there isn''t any accompanying text
dont.1=Don''t use custom symbols that aren''t consistent with Jenkins
dont.2=Don''t add symbols to headings, they just create visual clutter
usage.title=Using Symbols
usage.1=Using symbols in your view is simple. Use the existing <code>icon</code> component and set the <code>src</code> value to the symbol you want, prefixed with <code>"symbol-"</code>.
usage.2=Symbols can also display tooltips:
usage.3=It''s also possible to customize symbols with custom classes:
usage.4=You can change the size of the symbol by using one of the sizing classes:
usage.5=You can use the build status symbols like so, append '-anime' to use the animated variant:
usage.6=And you can use the weather health symbols like so:
ioniconsApi=Add more symbols with the ionicons API plugin
customSymbols=Custom Symbols
customSymbols.description.1=Add your symbol to:
customSymbols.description.2=Reference the symbol with:
customSymbols.ionicons-api=To use more symbols, add the <code>ionicons-api-plugin</code> to your project.
customSymbols.information=Make sure you replace the placeholder parameters:
customSymbols.symbolName=the file name of the symbol without the file extension (e.g. cloud)
customSymbols.artifactId=the artifact ID of your plugin, or the one of the plugin you want to load the symbol from
customSymbols.artifactId.description=ArtifactId can be found in your <code>pom.xml</code> for Maven plugins or \
   as <code>shortName</code> in <code>build.gradle(.kts)</code> for Gradle plugins.
customSymbols.theme=To make your symbol themeable, adjust the following properties:
customSymbols.theme.clarification=You don''t need to add both attributes, pick the one that matches your use case.
