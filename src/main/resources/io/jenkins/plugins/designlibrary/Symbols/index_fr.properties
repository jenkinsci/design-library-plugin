leadParagraph=Les symboles Jenkins sont une vaste et coh\u00e9rente collection d''ic\u00f4nes \u00e0 utiliser dans Jenkins et ses plugins. Les symboles sont destin\u00e9s \u00e0 \u00eatre utilis\u00e9s partout o\u00f9 une ic\u00f4ne traditionnelle serait utilis\u00e9e, comme dans la barre lat\u00e9rale, dans les boutons et dans les tableaux. Les symboles sont \u00e9volutifs, supportent diff\u00e9rents poids et s''adaptent au th\u00e8me de l''utilisateur.
do=Conseill\u00e9
dont=D\u00e9conseill\u00e9
do.1=Les symboles devraient \u00eatre utiliser pour aider un utilisateur \u00e0 reconna\u00eetre d''un coup d''oeil ce que fait une t\u00e2che
do.2=Ils devraient \u00eatre reconnaissable et pertinent, par ex 
do.2Continued=\ pour les identifiants
do.3=Utiliser une infobulle sur le symbole s''il n''est accompagn\u00e9 d''aucun texte
dont.1=Ne pas utiliser de symboles personnalis\u00e9s non coh\u00e9rents avec Jenkins
dont.2=Ne pas ajouter de symboles aux en-t\u00eates, ils ne font que cr\u00e9er un encombrement visuel
usage.title=Utiliser des symboles
usage.1=Utiliser des symboles dans votre vue est simple. Utilisez le composant <code>icon</code> existant et d\u00e9finissez la valeur <code>src</code> avec le symbole souhait\u00e9 pr\u00e9fix\u00e9 de <code>"symbol-"</code>.
usage.2=Les symboles peuvent \u00e9galement afficher des infobulles :
usage.3=Il est \u00e9galement possible de personnaliser les symboles avec des classes personnalis\u00e9es :
usage.4=Vous pouvez changer la taille du symbole en utilisant une des classes de taille :
ioniconsApi=Ajouter plus de symboles avec l''API du plugin ionicons
customSymbols=Symboles personnalis\u00e9s
customSymbols.description.1=Ajouter votre symbole \u00e0\u00a0:
customSymbols.description.2=R\u00e9f\u00e9rez le symbole avec :
customSymbols.ionicons-api=Pour utiliser plus de symboles, ajoutez <code>ionicons-api-plugin</code> \u00e0 votre projet.
customSymbols.information=Assurez-vous de remplacer les param\u00e8tres de l''espace r\u00e9serv\u00e9 :
customSymbols.symbolName=le nom du fichier du symbole sans l''extension de fichier (par exemple cloud)
customSymbols.artifactId=l''identifiant de l''artefact de votre plugin, ou celui du plugin depuis lequel vous voulez charger le symbole
customSymbols.artifactId.description=ArtifactId peut \u00eatre trouv\u00e9 dans votre <code>pom.xml</code> pour les plugins Maven ou en tant que <code>shortName</code> dans <code>build.gradle(.kts)</code> pour les plugins Gradle.
customSymbols.theme=Pour rendre votre symbole th\u00e9mable, ajustez les propri\u00e9t\u00e9s suivantes :
customSymbols.theme.clarification=Vous n''avez pas besoin d''ajouter les deux attributs, choisissez celui qui correspond \u00e0 votre cas d''utilisation.
