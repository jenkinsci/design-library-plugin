titlejava=Localize text in Java to show it in the user''s language
howtojava=In order to make texts defined in Java localizable you have to create a file <em>Messages.properties</em> in the resources folder of your Java package. \
  This file gets the default language which should be english normally. For other languages add a file <em>Messages_&lt;two letter country code&gt;.properties</em>. \
  During the build process a Java class <em>Messages</em> is generated that provides static methods to show the texts in the correct language. The method names \
  correspond to the property names, with characters, that are not valid in Java variables being replaced with an underscore. Assuming you defined a property <em>\
  MyClass.displayName</em> you can make use of it with <em>Messages.MyClass_displayName()</em>. \
  You can have variable parts inside the text by using <em>{0}</em> with the <em>0</em> bing the variable counter. The Java method then requires as many parameters as you have \
  defined variables in the property value.
hello=Hello {0}
titlejelly=Localize text in jelly files to show it in the user''s language
howtojelly=Text in Jelly files are localized by using <em>$&#123;%Text}</em>. The text after the percent sign is displayed as is unless a property with the same \
  name is found in the file <em>&lt;jelly filename&gt;.properties</em>. Similar to java you can use variables in the property values with $&#123;0}.
longtext=A longer text that should not appear inline in the jelly file.
